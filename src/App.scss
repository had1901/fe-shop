@use "sass:map";




$grid-column: 12;
$grid-gutter: 20px;

%gutter-padding{
    padding-left: calc(var(--grid-gutter-x) * 0.5);
    padding-right: calc(var(--grid-gutter-x) * 0.5);
}
%no-gutter{
    padding-left: 0 !important;
    padding-right: 0 !important;
}





.container-fluid{
    --grid-gutter-x: #{$grid-gutter};
    --grid-gutter-y: #{$grid-gutter};

    width: 100%;
    margin-left: auto;
    margin-right: auto;
    @extend %gutter-padding;
}

.container{
    // @extend .container-fluid
    margin-left: auto;
    margin-right: auto;
}

.row{
    display: flex;
    flex-wrap: wrap;
    margin-left: calc(($grid-gutter) * 0.5 * -1);
    margin-right: calc(($grid-gutter) * 0.5 * -1);
    margin-top: calc(var(--grid-gutter-y) - 1) ;

     > * {
        @extend %gutter-padding;
    }
}

.col {
    flex: 1 0;
}

.col-no-gap {
    flex: 1 0;
    @extend %no-gutter;
}

.no-gutter {
    @extend %no-gutter;
}

$grid-breakpoints: (
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px
);

$container-max-widths: (
  sm: 540px,
  md: 720px,
  lg: 960px,
  xl: 1140px,
  xxl: 1320px
);
$gutters: (
  0: 0,
  1: 0.25,
  2: 0.5,
  3: 1,
  4: 1.5,
  5: 3,
);



@each $breakpoint, $value in $grid-breakpoints{
    $max-width: map.get($container-max-widths, $breakpoint);
    $infix: if($breakpoint == xs, '', '-#{$breakpoint}');

    

    @media (min-width: $value) {
        .container{
            max-width: $max-width;
        }

        @for $i from 1 through $grid-column * 0.5 {
            .row-cols#{$infix}-#{$i} > * {
                width: calc(100% / $i);
                flex: 0 0 auto;

            }
        }
        @for $i from 1 through $grid-column {
            .col#{$infix}-#{$i} {
                width: calc(100% / $grid-column * $i)  ;
                flex: 0 0 auto;
            }
        }

        @for $i from 0 to $grid-column {
            .offset#{$infix}-#{$i} {
                margin-left: calc(100% / $grid-column * $i);
            }
        }
        @for $i from 0 to $grid-column * 0.5 {
            .no-gutter#{$infix}-#{$i} {
                padding-left: calc(100% / $grid-column * $i);
            }
        }
        @each $i, $ratio in $gutters {
            .gx#{$infix}-#{$i} {
                padding-left: #{$grid-gutter * $ratio};
                padding-right: #{$grid-gutter * $ratio};
            }
            .gy#{$infix}-#{$i} {
                padding-top: #{$grid-gutter * $ratio};
                padding-bottom: #{$grid-gutter * $ratio};
            }
            .g#{$infix}-#{$i} {
                padding: #{$grid-gutter * $ratio};
                
            }
        }
        

    }

}
@each $breakpoint, $value in $grid-breakpoints{
    @media (max-width: $value) {
        .d-#{$breakpoint}-none {
            display: none;
        }
    }
}
.toast{
    color: red;
}